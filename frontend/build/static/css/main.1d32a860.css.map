{"version":3,"file":"static/css/main.1d32a860.css","mappings":"AAAA,KAKE,kCAAmC,CACnC,iCAAkC,CAJlC,mIAKF,CAEA,KACE,uEAEF,CCZA,KACE,iBCDF,WACE,qBACA,yGAMA,YACA,0HAOA,0IAOA,qIAgBA,mBAEA,yCAGF,6BAEE,sBACA,mBAEA,aACA,kBASF,iBAEI,cALF,qBAGF,6BAEI,CATF,kBAIA,CALA,gCAUE,wBAGA,mEALJ,uBAEI,2DAGA,4DAIJ,uBAGE,2DAGI,eAEA,mBACA,wCAKF,WADF,aACE,+CA6EA,CA7EA,UA6EA,qBACI,kEAKA,YAII,wBACA,CAFA,WACA,CAFA,eACA,CAHJ,iBAKI,oCAUA,WAFA,aACA,oBACA,kBA3CO,CAeP,kBAmCJ,6CAKI,sCACA,CAzCA,yBAmCJ,CAnCI,WAmCJ,YAnCI,6BAyCA,kBAWR,iDAEQ,2CARA,qEAtDA,yBA4DR,CAXQ,gDAaA,6BAFR,6CAEQ,yDAKR,6CAEQ,CAFR,kCAEQ,gHCrNZ,eAME,wCALA,8BACA,iCACA,0CACA,+BACA,2BACA","sources":["index.css","App.scss","TerminalStyles.scss","TerminalComponents/imageLoader.scss"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n",".App {\n  min-height: 100vh;\n  // background-color: #0f1c0d;\n}","@font-face {\n  font-family: 'SnesFont';\n  src: local('SnesFont'), url(./fonts/PressStart2P-Regular.ttf) format('truetype');\n  /* other formats include: 'woff2', 'truetype, 'opentype',\n                            'embedded-opentype', and 'svg' */\n}\n\n@font-face {\n  font-family: 'VGAFont';\n  src: local('VGAFont'), url('./fonts/oldschool_pc_font_pack_v2.2_FULL/ttf - Ac (aspect-corrected)/Ac437_Acer_VGA_9x8.ttf') format('truetype');\n  /* other formats include: 'woff2', 'truetype, 'opentype',\n                            'embedded-opentype', and 'svg' */\n}\n\n@font-face {\n  font-family: 'EGAFont';\n  src: local('EGAFont'), url('./fonts/oldschool_pc_font_pack_v2.2_FULL/ttf - Ac (aspect-corrected)/AcPlus_IBM_EGA_9x14-2x.ttf') format('truetype');\n  /* other formats include: 'woff2', 'truetype, 'opentype',\n                            'embedded-opentype', and 'svg' */\n}\n\n@font-face {\n  font-family: 'Apricot';\n  src: local('Apricot'), url('./fonts/oldschool_pc_font_pack_v2.2_FULL/ttf - Ac (aspect-corrected)/Ac437_ApricotXenC.ttf') format('truetype');\n  /* other formats include: 'woff2', 'truetype, 'opentype',\n                            'embedded-opentype', and 'svg' */\n}\n\n// terminal-server/frontend/src/fonts/oldschool_pc_font_pack_v2.2_FULL/ttf - Ac (aspect-corrected)/Ac437_Acer_VGA_9x8.ttf\nbody {\n  height: 100vh;\n  margin: 0;\n}\n\n#root {\n  height: 100%;\n}\n\n.terminal-app {\n  filter: url(\"#pixelate\");\n\n  svg { display: block }\n}\n\n.Terminal-Viewer {\n  padding-left: 5%;\n  padding-right: 5%;\n  padding-bottom: 5em;\n  // display: flex;\n  flex-direction: column;\n  align-items: left;\n  font-size: calc(10px + 2vmin);\n  color: rgb(136, 211, 255);\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.screen-cone {\n  pointer-events: none;\n\n  &:before,\n  &:after {\n      display: block;\n      height: 100%;\n      width: 100%;\n      pointer-events: none;\n      content: '';\n      position: fixed;\n  }\n\n  &:before {\n    background-image: radial-gradient(transparent 60%, rgba(0, 0, 0, 0.626));\n  }\n}\n\n/* LIST OF FURTHER IMPROVEMENTS */\n\n/* // 1. settings: direction of moving scanlines (currently: only bottom to top)\n// 2. settings: number of moving scanlines (currently: 0 or 1)\n// 3. settings: delay between 2 moving scanlines\n// 4. check css validity with keyframes 0% without second step */\n\n/*\ncurrently working on :\ncalculation draft for keyframes steps\n\n$scan-moving-duration: 3s;\n$scan-moving-delay: 7s;\n\ntotal time = 10s (duration + delay)\nkeyframes :\n    0%: wait\n    15%: start moving\n    85%: end moving & start waiting\n    100% : wait\n\n(the rest later)\n\n*/\n\n\n\n/* REGULAR SCANLINES SETTINGS */\n\n    // width of 1 scanline (min.: 1px)\n    $scan-width: 2px;\n\n    // emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)\n    $scan-crt: true;\n\n    // frames-per-second (should be > 1), only applies if $scan-crt: true;\n    $scan-fps: 60;\n\n    // scanline-color (rgba)\n    $scan-color: rgba(#000, .3);\n\n    // set z-index on 8, like in ♥ 8-bits ♥, or…\n    // set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);\n    $scan-z-index: 2147483648; \n\n/* MOVING SCANLINE SETTINGS */\n\n    // moving scanline (true, false)\n    $scan-moving-line: true;\n\n    // opacity of the moving scanline\n    $scan-opacity: .75;\n\n/* MIXINS */\n\n    // apply CRT animation: @include scan-crt($scan-crt);\n    @mixin scan-crt($scan-crt) {\n        @if $scan-crt == true {\n            animation: scanlines 2s steps($scan-fps) infinite;\n        }\n        @else { animation: none; }\n    }\n\n    // apply CRT animation: @include scan-crt($scan-crt);\n    @mixin scan-moving($scan-moving-line) {\n        @if $scan-moving-line == true {\n            animation: scanline 6s linear infinite;\n        }\n        @else { animation: none; }\n    }\n\n/* CSS .scanlines CLASS */\n\n    .scanlines {\n        position: relative;\n        overflow: hidden; // only to animate the unique scanline\n        height: 100%;\n        background-color: #282c34;\n\n        &:before,\n        &:after {\n            display: block;\n            pointer-events: none;\n            content: '';\n            position: absolute;\n        }\n\n        // unique scanline travelling on the screen\n        &:before {\n            // position: absolute;\n            // bottom: 100%;\n            width: 100%;\n            height: $scan-width * 1;\n            z-index: $scan-z-index + 1;\n            background: $scan-color;\n            opacity: $scan-opacity;\n            // animation: scanline 6s linear infinite;\n            @include scan-moving($scan-moving-line);\n        }\n\n        // the scanlines, so!\n        &:after {\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: $scan-z-index;\n            background: linear-gradient(\n                to bottom,\n                transparent 50%,\n                $scan-color 51%\n            );\n            background-size: 100% $scan-width*2;\n            @include scan-crt($scan-crt);\n        }  \n    }\n\n/* ANIMATE UNIQUE SCANLINE */\n    @keyframes scanline {\n        0% {\n            transform: translate3d(0,200000%,0);\n            // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }\n        }\n    }\n\n    @keyframes scanlines {\n        0% {\n            background-position: 0 50%;\n            // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }\n        }\n    }","canvas.loading {\n  image-rendering: optimizeSpeed;\n  image-rendering: -moz-crisp-edges;\n  image-rendering: -webkit-optimize-contrast;\n  image-rendering: -o-crisp-edges;\n  image-rendering: crisp-edges;\n  -ms-interpolation-mode: nearest-neighbor;\n}"],"names":[],"sourceRoot":""}